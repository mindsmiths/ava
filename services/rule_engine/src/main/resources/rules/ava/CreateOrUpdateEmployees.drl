package rules.ava;

import agents.Ava;
import models.OnboardingStage;
import signals.EmployeeUpdateSignal;
import com.mindsmiths.sdk.utils.Utils;
import com.mindsmiths.employeeManager.employees.Employee;


rule "Intialize employee"
    when
        employee: Employee() from entry-point "signals"
        agent: Ava(onboardingStage == null)
        not Employee()
    then
        modify(agent) {
            updateEmployeeData(employee),
            setConnection("armory", Utils.randomString()),
            setOnboardingStage(OnboardingStage.AVA_CREATED)
        };
        delete(employee);
        insert(employee);
end

rule "Update employee"
    when
        employee: Employee(email: email, employeeId: id) from entry-point "signals"
        oldEmployee : Employee()
        agent: Ava(agentId: id)
    then
        modify(agent){ updateEmployeeData(employee) };
        delete(employee);
        delete(oldEmployee);
        insert(employee);
end

rule "Other employees updated"
    when
        updateSignal: EmployeeUpdateSignal(agentId: agentId, employee: employee) from entry-point "signals"
        agent: Ava()
    then
        modify(agent){ addOrUpdateEmployee(agentId, employee) }
        delete(updateSignal);
end
