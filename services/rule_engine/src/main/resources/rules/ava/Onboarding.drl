package rules.ava;

import com.mindsmiths.ruleEngine.util.Agents;
import com.mindsmiths.ruleEngine.model.Heartbeat;
import com.mindsmiths.armory.event.UserConnected;
import com.mindsmiths.armory.event.Submit;
import com.mindsmiths.sdk.utils.templating.*;
import com.mindsmiths.employeeManager.employees.Employee;
import com.mindsmiths.ruleEngine.util.Log;

import java.util.List;
import java.util.Map;

import signals.EmployeeUpdateSignal;

import agents.Ava;
import agents.CultureMaster;
import models.OnboardingStage;
import models.OnboardingTemplates

rule "Send onboarding email"
    when
        agent: Ava(workingHours == true, onboardingStage == OnboardingStage.AVA_CREATED)
        employee: Employee()
    then
        agent.sendEmail(OnboardingTemplates.welcomeEmail(employee, agent.getConnection("armory"),
                                                         agent.getConnection("email")));
        modify(agent) {setOnboardingStage(OnboardingStage.WELCOME_EMAIL_SENT)};
end

rule "Start or reconnect familiarity quiz"
   when
        signal: UserConnected(getParamAsString("trigger") == "start-onboarding") from entry-point "signals"
        agent: Ava(onboardingStage in (OnboardingStage.WELCOME_EMAIL_SENT, OnboardingStage.FAMILIARITY_QUIZ))
   then
        agent.showScreens("introScreen", OnboardingTemplates.familiarityQuizScreens(agent.createOtherEmployeeNames()));
        modify(agent) {setOnboardingStage(OnboardingStage.FAMILIARITY_QUIZ)};
        delete(signal);
end

rule "Store familiarity answers"
   when
        signal: Submit(getParamAsString("submit") == "finish-familiarity-quiz") from entry-point "signals"
        agent: Ava(onboardingStage == OnboardingStage.FAMILIARITY_QUIZ, familiarity: familiarity)
        employee: Employee(employeeId: id, firstName: firstName, lastName: lastName)
   then
        modify(agent) {
            chargeConnectionNeurons(signal),
            setOnboardingStage(OnboardingStage.FINISHED)
        };
        agent.logEvent("Onboarding Finished", Map.of("employeeId", employeeId, "familiarity", familiarity,
                       "full name", String.join(" ", firstName, lastName)));
end

rule "Reconnect final screen"
   when
        signal: UserConnected(getParamAsString("trigger") == "start-onboarding") from entry-point "signals"
        agent: Ava(onboardingStage == OnboardingStage.FINISHED)
   then
        agent.showScreen(OnboardingTemplates.finalScreen());
        delete(signal);
end