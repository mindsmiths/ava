package rules.ava;

import com.mindsmiths.ruleEngine.model.Heartbeat;
import com.mindsmiths.employeeManager.employees.Employee;
import com.mindsmiths.armory.event.UserConnected;
import com.mindsmiths.armory.event.Submit;

import agents.Ava;

import models.MonthlyCoreStage;
import models.MonthlyCoreTemplates;
import models.MonthlyCoreData
import models.CronTime


rule "Send monthly core email"
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Ava(workingHours == true, onboarded == true, CronTime.FIRST_TUESDAY_IN_MONTH.isSatisfied(ts),
                   armory : getConnection("armory") != null, email : getConnection("email") != null)
        employee: Employee()
        not MonthlyCoreData()
    then
        agent.sendEmail(MonthlyCoreTemplates.monthlyCoreEmail(employee, armory, email));
        insert(new MonthlyCoreData());
end

rule "Start or reconnect monthly quiz"
   when
        signal: UserConnected(getParamAsString("trigger") == "start-monthly-core") from entry-point "signals"
        agent: Ava()
        monthlyCoreData: MonthlyCoreData(monthlyCoreStage in (MonthlyCoreStage.EMAIL_SENT, MonthlyCoreStage.FAMILIARITY_QUIZ))
        employee: Employee()
   then
        agent.showScreens("intro-screen", MonthlyCoreTemplates.monthlyQuizScreens(agent.createOtherEmployeeNames()));
        modify(monthlyCoreData) {setMonthlyCoreStage(MonthlyCoreStage.FAMILIARITY_QUIZ)};
        delete(signal);
end

rule "Store monthly core answers"
   when
        signal: Submit(buttonId == "finish-monthly-quiz") from entry-point "signals"
        monthlyCoreData: MonthlyCoreData(monthlyCoreStage == MonthlyCoreStage.FAMILIARITY_QUIZ)
        agent: Ava()
   then
        modify(agent) {chargeConnectionNeurons(signal)}
        modify(monthlyCoreData) {setMonthlyCoreStage(MonthlyCoreStage.FINISHED)};
        delete(signal);
end

rule "Reconnect monthly core final screen"
   when
        signal: UserConnected(getParamAsString("trigger") == "start-monthly-core") from entry-point "signals"
        agent: Ava()
        monthlyCoreData: MonthlyCoreData(monthlyCoreStage == MonthlyCoreStage.FINISHED)
   then
        agent.showScreen(MonthlyCoreTemplates.finalScreen());
        delete(signal);
end

rule "Reset monthly core loop"
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        eval(!CronTime.FIRST_TUESDAY_IN_MONTH.isSatisfied(ts))
        monthlyCoreData: MonthlyCoreData()
    then
     delete(monthlyCoreData);
end